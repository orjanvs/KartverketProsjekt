@using System.Security.Claims
@using KartverketProsjekt.Models.ViewModels
@model ViewMapReportRequest



<div class="container py-5">
    <div class="row">
        <div class="col-md-4">
            @if (Model != null)
            {
                <form method="get">

                    <div class="mb-3">
                        <label class="form-label">Id</label>
                        <input type="text" id="id" class="form-control" asp-for="MapReportId" readonly />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Kartlag</label> <!-- Nytt felt for Kartlag -->
                        <input type="text" id="mapLayer" class="form-control"
                               asp-for="MapLayerType" readonly />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Dato</label>
                        <input type="text" id="date" class="form-control" asp-for="SubmissionDate" readonly />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <input type="text" id="status" class="form-control"
                              asp-for="StatusDescription" readonly />
                    </div>



                    <div class="mb-3">
                        <div class="mb-3">
                            <label class="form-label">Beskrivelse</label>
                            <textarea id="description" class="form-control" asp-for="Description" readonly style="resize: vertical;"></textarea>
                        </div>

                    </div>

                    <div class="mb-3">
                        <label class="form-label">Innsender</label>
                        <input type="text" id="submitter" class="form-control" asp-for="SubmitterName" readonly />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Saksbehandler</label>
                        <input type="text" id="caseHandler" class="form-control" asp-for="CaseHandlerName" readonly />
                    </div>



                    <div class="mb-3">
                        <label class="form-label">Vedlegg</label>
                        @if (Model.Attachments != null && Model.Attachments.Any())
                        {
                            <ul>
                                @foreach (var attachment in Model.Attachments)
                                {
                                    <li>@attachment.FilePath</li> <!-- Viser filnavnet som tekst -->
                                }
                            </ul>
                        }
                        else
                        {
                            <p>Ingen vedlegg tilgjengelig.</p>
                        }
                    </div>

                </form>
            }
            else
            {
                <p>Ingen innmelding funnet!</p>
            }

            <form method="post">

                @{var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);}

                @if (User.IsInRole("Case Handler"))
                {
                    @if (Model.MapReportStatusId == 1)
                    {
                        <button type="submit" formaction="@Url.Action("StartHandlingMapReport", "MapReport", new { id = Model.MapReportId })"
                                class="btn btn-primary">
                            Start behandling
                        </button>
                    }
                    else if (Model.MapReportStatusId == 2 && Model.CaseHandlerId == currentUserId)
                    {
                        <button type="submit" formaction="@Url.Action("FinishHandlingMapReport", "MapReport", new { id = Model.MapReportId })"
                                class="btn btn-success"
                                onclick="return confirm('Er du sikker på at du vil fullføre behandlingen av denne innmeldingen?')">
                            Fullfør behandling
                        </button>
                        <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#reassignModal">
                            Reassign Case Handler
                        </button>
                    }
                    @if (Model.CaseHandlerId == currentUserId || Model.MapReportStatusId == 1) 
                    {
                    <button type="submit" formaction="@Url.Action("DeleteMapReport", "MapReport", new { id = Model.MapReportId })"
                            class="btn btn-danger"
                            onclick="return confirm ('Er du sikker på at du vil slette denne innmeldingen?');">
                        Slett innmelding
                    </button>
                    }
                }
                else if (User.IsInRole("Submitter") && Model.MapReportStatusId == 1)
                {
                    <button type="submit" formaction="@Url.Action("DeleteMapReport", "MapReport", new { id = Model.MapReportId })"
                            class="btn btn-danger"
                            onclick="return confirm ('Er du sikker på at du vil slette denne innmeldingen?');">
                        Slett innmelding
                    </button>
                }

            </form>
        </div>


        <div class="col-md-8">
            <div id="map"></div>

        </div>
    </div>
</div>

<!-- Modal for reassigning case handler -->
<div class="modal fade" id="reassignModal" tabindex="-1" aria-labelledby="reassignModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reassignModalLabel">Reassign Case Handler</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-action="AssignCaseHandler">
                    <input type="hidden" asp-for="MapReportId" />
                    <div class="mb-3">
                        <label for="newCaseHandler" class="form-label">Select New Case Handler</label>
                        <select id="newCaseHandler" class="form-select" asp-for="CaseHandlerId" asp-items="Model.AvailableCaseHandlers"></select>
                    </div>
                    <button type="submit" class="btn btn-primary">Reassign</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <script>

        // Define the map layers
        var baseMaps = {
            "Fargekart": L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', { maxZoom: 18, attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>' }),
            "Gråtonekart": L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topograatone/default/webmercator/{z}/{y}/{x}.png', { maxZoom: 18, attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>' }),
            "Turkart": L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/toporaster/default/webmercator/{z}/{y}/{x}.png', { maxZoom: 18, attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>' }),
            "Sjøkart": L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/sjokartraster/default/webmercator/{z}/{y}/{x}.png', { maxZoom: 18, attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>' })
        };

        // Get the MapLayerId from the model
        var mapLayerId = @Model.MapLayerId;

        // Function to get the map layer based on MapLayerId
        function getMapLayerById(mapLayerId) {
            switch (mapLayerId) {
                case 1:
                    return baseMaps["Fargekart"];
                case 2:
                    return baseMaps["Gråtonekart"];
                case 3:
                    return baseMaps["Turkart"];
                case 4:
                    return baseMaps["Sjøkart"];
                default:
                    return baseMaps["Fargekart"];
            }

        }

        // Initialize the map with the correct layer
        var map = L.map('map').setView([60.145, 10.25], 15);
        getMapLayerById(mapLayerId).addTo(map);

        // var map = L.map('map').setView([60.145, 10.25], 15);

        // L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
        //     maxZoom: 15,
        //     attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        // }).addTo(map);

        // Handle the GeoJSON data if it exists
        @if (Model != null && !string.IsNullOrEmpty(Model.GeoJsonString))
        {
            // Wrapping in <text> tag to avoid Razor syntax errors
            <text>

                    try {
                    // Initializing a variable with the GeoJson property value.
                    // Html.Raw() is used to avoid encoding the JSON string
                    var geoJsonData = @Html.Raw(Model.GeoJsonString);

                    // Creates new featuregroup instance to store layers from GeoJSON data
                    var drawnItems = new L.FeatureGroup();

                    // Adds the GeoJSON data to the map
                    L.geoJSON(geoJsonData, {
                        onEachFeature: function(feature, layer) {
                        // Bind the popup to the layer
                        layer.bindPopup('@Html.Raw(Json.Serialize(Model.Description))');
                    drawnItems.addLayer(layer);
                                                        }
                                                    });

                    map.addLayer(drawnItems);

                    // Fit the map to the GeoJSON bounds
                    var bounds = drawnItems.getBounds();
                    if (bounds.isValid()) {
                        map.fitBounds(bounds);
                                                    }
                    } catch (error) {
                        console.error("Error processing GeoJSON:", error);
                                                }
            </text>
        }
    </script>
}